dist: xenial
language: c

env:
  global:
    - secure: "QD09MuUxftXRXtz7ZrB7S0NV/3O9yVhjvIlCSbXN8B87rNSDC8wxMThKMT7iZewnqGk53m+Up19PiMw5ERlHose5tm2cmY1FO/l+c9oAyWZaAL+4XNXryq6zI5F5FX5I61NbfqV3xcnfLTI2QIJF6WqDojNxhPjTbNzQGxIDuqw="

matrix:
  include:
    # windows build
    - os: windows
      before_install:
        - choco install python --version 3.8.0
        - choco install ninja
        - pip3 install meson
      env:
        - TEST="windows"
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      script:
        - export PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin":$PATH
        - mkdir build && cd build
        - cmake -G "Visual Studio 15 2017" ..
        - msbuild.exe libsrtp2.sln -p:Configuration=Release
        - msbuild.exe RUN_TESTS.vcxproj -p:Configuration=Release
        - cd ..
        - mkdir build_shared && cd build_shared
        - cmake -G "Visual Studio 15 2017" -DBUILD_SHARED_LIBS=ON ..
        - msbuild.exe libsrtp2.sln -p:Configuration=Release
        - msbuild.exe RUN_TESTS.vcxproj -p:Configuration=Release
        # Test mingw build
        - cd ..
        - meson setup builddir-gcc
        - meson compile -C builddir-gcc
        - meson test -v -C builddir-gcc
        # Test MSVC 64-bit build
        - cmd.exe //C 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat' amd64 \& set CC=cl \& meson setup --werror builddir-msvc-amd64 \& meson compile -C builddir-msvc-amd64 \& meson test -v -C builddir-msvc-amd64
        - cat builddir-msvc-amd64/meson-logs/meson-log.txt
        # Test MSVC 32-bit build
        - cmd.exe //C 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat' x86 \& set CC=cl \& meson setup --werror builddir-msvc-x86 \& meson compile -C builddir-msvc-x86 \& meson test -v -C builddir-msvc-x86
        # Test MSVC 64-bit UWP build. This is a cross build because we cannot run UWP binaries natively.
        - |
          cat > uwp-amd64-cross-file.txt <<EOF
          [host_machine]
          system = 'windows'
          cpu_family = 'x86_64'
          cpu = 'x86_64'
          endian = 'little'
        
          [properties]
          c_args = ['-DWINAPI_FAMILY=WINAPI_FAMILY_APP']
          c_link_args = ['-APPCONTAINER', 'WindowsApp.lib']
          needs_exe_wrapper = true
        
          [binaries]
          ar        = 'lib'
          c         = 'cl'
          cpp       = 'cl'
          pkgconfig = 'false'
          EOF
        - cmd.exe //C 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat' amd64 uwp \& meson setup --werror -Dvs_crt=md --cross-file uwp-amd64-cross-file.txt builddir-uwp-amd64 \& meson compile -C builddir-uwp-amd64
        - cat builddir-uwp-amd64/meson-logs/meson-log.txt
        # Test MSVC ARM64 UWP build. This is a cross build.
        - |
          cat > uwp-arm64-cross-file.txt <<EOF
          [host_machine]
          system = 'windows'
          cpu_family = 'aarch64'
          cpu = 'aarch64'
          endian = 'little'
        
          [properties]
          c_args = ['-DWINAPI_FAMILY=WINAPI_FAMILY_APP']
          c_link_args = ['-APPCONTAINER', 'WindowsApp.lib']
          needs_exe_wrapper = true
        
          [binaries]
          ar        = 'lib'
          c         = 'cl'
          cpp       = 'cl'
          pkgconfig = 'false'
          EOF
        - cmd.exe //C 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat' amd64_arm64 uwp \& meson setup --werror -Dvs_crt=md --cross-file uwp-arm64-cross-file.txt builddir-uwp-arm64 \& meson compile -C builddir-uwp-arm64
        - cat builddir-uwp-arm64/meson-logs/meson-log.txt
