name: AutoTools CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        crypto: [internal, openssl, wolfssl, nss]
        include:
          - crypto: internal
            configure-crypto-enable: "--with-crypto-library=internal"
          - crypto: openssl
            configure-crypto-enable: "--with-crypto-library=openssl"
          - crypto: wolfssl
            configure-crypto-enable: "--with-crypto-library=wolfssl"
          - crypto: nss
            configure-crypto-enable: "--with-crypto-library=nss"

    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install valgrind

    - name: Setup Ubuntu wolfSSL
      if: matrix.os == 'ubuntu-latest' && matrix.crypto == 'wolfssl'
      run: |
        git clone https://github.com/wolfSSL/wolfssl
        cd wolfssl
        git checkout v5.7.0-stable
        ./autogen.sh
        ./configure '--enable-srtp-kdf' '--enable-aesctr' '--enable-intelasm' '--enable-aesgcm-stream'
        make
        sudo make install
        sudo ldconfig
        cd ..

    - name: Setup Ubuntu NSS
      if: matrix.os == 'ubuntu-latest' && matrix.crypto == 'nss'
      run: sudo apt-get install libnss3-dev

    - name: Setup macOS OpenSSL
      if: matrix.os == 'macos-latest' && matrix.crypto == 'openssl'
      run: echo "configure-env=PKG_CONFIG_PATH=$(brew --prefix openssl@1.1)/lib/pkgconfig" >> $GITHUB_ENV

    - name: Setup macOS wolfSSL
      if: matrix.os == 'macos-latest' && matrix.crypto == 'wolfssl'
      run: |
        brew install autoconf automake libtool
        git clone https://github.com/wolfSSL/wolfssl
        cd wolfssl
        git checkout v5.7.0-stable
        ./autogen.sh
        CPU=`sysctl -n machdep.cpu.brand_string`
        if [[ "$CPU" =~ Intel ]]; then
          ./configure '--enable-srtp-kdf' '--enable-aesctr' '--enable-intelasm' '--enable-aesgcm-stream'
        else
          ./configure '--enable-srtp-kdf' '--enable-aesctr' '--enable-armasm' '--enable-aesgcm-stream'
        fi
        make
        sudo make install
        cd ..

    - name: Setup macOS NSS
      if:  matrix.os == 'macos-latest' && matrix.crypto == 'nss'
      run: brew install nss

    - uses: actions/checkout@v2

    - name: Configure
      run: ${{env.configure-env}} EXTRA_CFLAGS=-Werror ./configure ${{ matrix.configure-crypto-enable}}

    - name: Build
      run: make

    - name: Test
      run: make runtest

    - name: Test Valgrind
      if:  matrix.os == 'ubuntu-latest' && matrix.crypto != 'nss'
      run: make runtest-valgrind
